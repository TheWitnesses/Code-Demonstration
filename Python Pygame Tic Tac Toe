# Tic tac toe
import random, pygame, sys, time
from pygame.locals import *

# Starts the game
pygame.init()

# Set up variables we need
# =========================
# set up game over variable
GameOver = False
Winner = False

#Create board table
UnusedBoxes = [1, 2, 3, 4, 5, 6, 7, 8, 9]

#Keeps track of status of the game
MainBoard = [1, 2, 3, 4, 5, 6, 7, 8, 9]

#I am setting up the window
DISPLAYSURF = pygame.display.set_mode((864, 720))
pygame.display.set_caption('Tic Tac Toe WIP')
WHITE = (255, 255, 255)
RED = (255, 0, 0)
GRAY = (126, 126, 126)
ORANGE = (207, 118, 33)
BLACK = (0, 0, 0)
BLUE = (0, 0, 255)

pygame.draw.rect(DISPLAYSURF, WHITE, (288, 72, 72, 576))
pygame.draw.rect(DISPLAYSURF, WHITE, (503, 72, 72, 576))                    
pygame.draw.rect(DISPLAYSURF, WHITE, (144, 432, 576, 72))
pygame.draw.rect(DISPLAYSURF, WHITE, (146, 216, 576, 72))

def DisplayWin(val):
    DISPLAYSURF.blit(textSurfaceObjPlayerChoiceb, textRectPlayerChoice)
    if val == "O":               
                DISPLAYSURF.blit(textSurfaceObjWinnerO, textRectWinnerO)                
    elif val == "X":
                DISPLAYSURF.blit(textSurfaceObjWinnerX, textRectWinnerX)
                

def CheckWin(val):

            GameEnded = False
            if MainBoard[0] == val and MainBoard[1] == val and MainBoard[2] == val:
                DisplayWin(val)
                GameEnded = True
                return (GameEnded)
            
            elif MainBoard[3] == val and MainBoard[4] == val and MainBoard[5] == val:
                DisplayWin(val)
                GameEnded = True
                return (GameEnded)

            elif MainBoard[6] == val and MainBoard[7] == val and MainBoard[8] == val:
                DisplayWin(val)
                GameEnded = True
                return (GameEnded)
                
            elif MainBoard[0] == val and MainBoard[3] == val and MainBoard[6] == val:
                DisplayWin(val)
                GameEnded = True
                return (GameEnded)
                
            elif MainBoard[1] == val and MainBoard[4] == val and MainBoard[7] == val:
                DisplayWin(val)
                GameEnded = True
                return (GameEnded)

            elif MainBoard[2] == val and MainBoard[5] == val and MainBoard[8] == val:
                DisplayWin(val)
                GameEnded = True
                return (GameEnded)

            elif MainBoard[2] == val and MainBoard[4] == val and MainBoard[6] == val:
                DisplayWin(val)
                GameEnded = True
                return (GameEnded)
                
            elif MainBoard[0] == val and MainBoard[4] == val and MainBoard[8] == val:
                DisplayWin(val)
                GameEnded = True
                return (GameEnded)

            else:
                return GameEnded


def RemoveChoice(val):
    for i in range (0, len(UnusedBoxes)):
                    if UnusedBoxes[i] == val:
                        boxindex = i
                        break
    del UnusedBoxes[boxindex]
    return

#Places X, hides number, deletes from list, puts x on board
def PlaceX():
    boxindex = -1
            
            
    if Xchoice == 1:
        DISPLAYSURF.blit(textSurfaceObj1b, textRectObj1)
        DISPLAYSURF.blit(textSurfaceObjX150, (166, 69))
        MainBoard[0] = 'X'
        RemoveChoice(Xchoice)
                           
            
    elif Xchoice == 2:
        DISPLAYSURF.blit(textSurfaceObj2b, textRectObj2)
        DISPLAYSURF.blit(textSurfaceObjX150, (381, 69))
        MainBoard[1] = 'X'
        RemoveChoice(Xchoice)

            
    elif Xchoice == 3:
        DISPLAYSURF.blit(textSurfaceObj3b, textRectObj3)
        DISPLAYSURF.blit(textSurfaceObjX150, (598, 69))
        MainBoard[2] = 'X'
        RemoveChoice(Xchoice)
                
            
    elif Xchoice == 4:
        DISPLAYSURF.blit(textSurfaceObj4b, textRectObj4)
        DISPLAYSURF.blit(textSurfaceObjX150, (166, 285))
        MainBoard[3] = 'X'
        RemoveChoice(Xchoice)               
            
    elif Xchoice == 5:                            
        DISPLAYSURF.blit(textSurfaceObj5b, textRectObj5)
        DISPLAYSURF.blit(textSurfaceObjX150, textRectObjX150)
        MainBoard[4] = 'X'
        RemoveChoice(Xchoice)

    elif Xchoice == 6:
        DISPLAYSURF.blit(textSurfaceObj6b, textRectObj6)
        DISPLAYSURF.blit(textSurfaceObjX150, (598, 285))
        MainBoard[5] = 'X'
        RemoveChoice(Xchoice)
                
    elif Xchoice == 7:
        DISPLAYSURF.blit(textSurfaceObj7b, textRectObj7)
        DISPLAYSURF.blit(textSurfaceObjX150, (166, 501))
        MainBoard[6] = 'X'
        RemoveChoice(Xchoice)
            
    elif Xchoice == 8:
        DISPLAYSURF.blit(textSurfaceObj8b, textRectObj8)
        DISPLAYSURF.blit(textSurfaceObjX150, (381, 501))
        MainBoard[7] = 'X'
        RemoveChoice(Xchoice)
    
    elif Xchoice == 9:
        DISPLAYSURF.blit(textSurfaceObj9b, textRectObj9)
        DISPLAYSURF.blit(textSurfaceObjX150, (598, 501))
        MainBoard[8] = 'X'
        RemoveChoice(Xchoice)


def PlaceO():
      
            if choice == 1:
                DISPLAYSURF.blit(textSurfaceObj1b, textRectObj1)
                DISPLAYSURF.blit(textSurfaceObjO150, (166, 69))
                MainBoard[0] = 'O'
                RemoveChoice(choice)
            
            elif choice == 2:
                DISPLAYSURF.blit(textSurfaceObj2b, textRectObj2)
                DISPLAYSURF.blit(textSurfaceObjO150, (381, 69))
                MainBoard[1] = 'O'
                RemoveChoice(choice)
                        
            elif choice == 3:
                DISPLAYSURF.blit(textSurfaceObj3b, textRectObj3)
                DISPLAYSURF.blit(textSurfaceObjO150, (598, 69))
                MainBoard[2] = 'O'
                RemoveChoice(choice)
                
            elif choice == 4:
                DISPLAYSURF.blit(textSurfaceObj4b, textRectObj4)
                DISPLAYSURF.blit(textSurfaceObjO150, (166, 285))
                MainBoard[3] = 'O'
                RemoveChoice(choice)

            elif choice == 5:                            
                DISPLAYSURF.blit(textSurfaceObj5b, textRectObj5)
                DISPLAYSURF.blit(textSurfaceObjO150, textRectObjX150)
                MainBoard[4] = 'O'
                RemoveChoice(choice)

            elif choice == 6:
                DISPLAYSURF.blit(textSurfaceObj6b, textRectObj6)
                DISPLAYSURF.blit(textSurfaceObjO150, (598, 285))
                MainBoard[5] = 'O'
                RemoveChoice(choice)
                
            elif choice == 7:
                DISPLAYSURF.blit(textSurfaceObj7b, textRectObj7)
                DISPLAYSURF.blit(textSurfaceObjO150, (166, 501))
                MainBoard[6] = 'O'
                RemoveChoice(choice)

            elif choice == 8:
                DISPLAYSURF.blit(textSurfaceObj8b, textRectObj8)
                DISPLAYSURF.blit(textSurfaceObjO150, (381, 501))
                MainBoard[7] = 'O'
                RemoveChoice(choice)

            elif choice == 9:
                DISPLAYSURF.blit(textSurfaceObj9b, textRectObj9)
                DISPLAYSURF.blit(textSurfaceObjO150, (598, 501))
                MainBoard[8] = 'O'
                RemoveChoice(choice)

#===========================================================

#Fonts
fontObj = pygame.font.Font('freesansbold.ttf', 50)
fontObj48 = pygame.font.Font('freesansbold.ttf', 26)
fontObj150 = pygame.font.Font('freesansbold.ttf', 150)


#Font object X
textSurfaceObjX150 = fontObj150.render('X', True, RED)
textRectObjX150 = textSurfaceObjX150.get_rect()
textRectObjX150.center = (432, 360)


#Font object O
textSurfaceObjO150 = fontObj150.render('O', True, RED)
textRectObjO150 = textSurfaceObjO150.get_rect()
textRectObjO150.center = (648, 144)

#Font object 1
textSurfaceObj1 = fontObj.render('1', False, GRAY)
textSurfaceObj1b = fontObj.render('1', False, BLACK)
textRectObj1 = textSurfaceObj1.get_rect()
textRectObj1.center = (216, 144)


#Font object 2
textSurfaceObj2 = fontObj.render('2', False, GRAY)
textSurfaceObj2b = fontObj.render('2', False, BLACK)
textRectObj2 = textSurfaceObj2.get_rect()
textRectObj2.center = (432, 144)


#Font object 3
textSurfaceObj3 = fontObj.render('3', False, GRAY)
textSurfaceObj3b = fontObj.render('3', False, BLACK)
textRectObj3 = textSurfaceObj3.get_rect()
textRectObj3.center = (648, 144)

#Font object 4
textSurfaceObj4 = fontObj.render('4', False, GRAY)
textSurfaceObj4b = fontObj.render('4', False, BLACK)
textRectObj4 = textSurfaceObj4.get_rect()
textRectObj4.center = (216, 360)


#Font object 5
textSurfaceObj5 = fontObj.render('5', False, GRAY)
textSurfaceObj5b = fontObj.render('5', False, BLACK)
textRectObj5 = textSurfaceObj5.get_rect()
textRectObj5.center = (432, 360)


#Font object 6
textSurfaceObj6 = fontObj.render('6', False, GRAY)
textSurfaceObj6b = fontObj.render('6', False, BLACK)
textRectObj6 = textSurfaceObj6.get_rect()
textRectObj6.center = (648, 360)

#Font object 7
textSurfaceObj7 = fontObj.render('7', False, GRAY)
textSurfaceObj7b = fontObj.render('7', False, BLACK)
textRectObj7 = textSurfaceObj7.get_rect()
textRectObj7.center = (216, 576)

#Font object 8
textSurfaceObj8 = fontObj.render('8', False, GRAY)
textSurfaceObj8b = fontObj.render('8', False, BLACK)
textRectObj8 = textSurfaceObj8.get_rect()
textRectObj8.center = (432, 576)

#Font object 9
textSurfaceObj9 = fontObj.render('9', False, GRAY)
textSurfaceObj9b = fontObj.render('9', False, BLACK)
textRectObj9 = textSurfaceObj9.get_rect()
textRectObj9.center = (648, 576)

#Get User Input
textSurfaceObjPlayerChoice = fontObj48.render('Where do you want your X? Pick a number between 1 and 9', False, ORANGE)
textSurfaceObjPlayerChoiceb = fontObj48.render('Where do you want your X? Pick a number between 1 and 9', False, BLACK)
textRectPlayerChoice = textSurfaceObjPlayerChoice.get_rect()
textRectPlayerChoice.center = (432, 684)

#Hides User Input
#textSurfaceObjPlayerChoiceb = fontObj48.render('Where do you want your X? Pick a number between 1 and 9', False, RED)
#textRectPlayerChoiceb = textSurfaceObjPlayerChoiceb.get_rect()

#Declares Winner for X
textSurfaceObjWinnerX = fontObj48.render('X Wins!', True, BLUE)
textRectWinnerX = textSurfaceObjWinnerX.get_rect()
textRectWinnerX.center = (432, 684)

#Declares Winner for O
textSurfaceObjWinnerO= fontObj48.render('O Wins!', True, BLUE)
textRectWinnerO = textSurfaceObjWinnerO.get_rect()
textRectWinnerO.center = (432, 684)

#Declares Draw
textSurfaceObjDraw= fontObj48.render('No Winner!', True, BLUE)
textRectDraw = textSurfaceObjDraw.get_rect()
textRectDraw.center = (432, 684)

DISPLAYSURF.blit(textSurfaceObj1, textRectObj1)
DISPLAYSURF.blit(textSurfaceObj2, textRectObj2)
DISPLAYSURF.blit(textSurfaceObj3, textRectObj3)
DISPLAYSURF.blit(textSurfaceObj4, textRectObj4)
DISPLAYSURF.blit(textSurfaceObj5, textRectObj5)
DISPLAYSURF.blit(textSurfaceObj6, textRectObj6)
DISPLAYSURF.blit(textSurfaceObj7, textRectObj7)
DISPLAYSURF.blit(textSurfaceObj8, textRectObj8)
DISPLAYSURF.blit(textSurfaceObj9, textRectObj9)
DISPLAYSURF.blit(textSurfaceObjPlayerChoice, textRectPlayerChoice)



    
#===============================================================================


#running the loop
while True:
   
    ValidX = False
    
        
    for event in pygame.event.get():
        if event.type == QUIT:
            pygame.quit()
            sys.exit()
        if event.type == KEYDOWN:            
            #CheckKey = pygame.key.get_pressed()

            
           

    #====================================================================================                
                #get input for x
                #convert input to integer
                

                    if event.key == K_1:
                        Xchoice = 1
                    
                
                    elif event.key == K_2:
                        Xchoice = 2
                
                    elif event.key == K_3:
                        Xchoice = 3
                
                    elif event.key == K_4:
                        Xchoice = 4
                
                    elif event.key == K_5:
                        Xchoice = 5
                
                    elif event.key == K_6:
                        Xchoice = 6
                
                    elif event.key == K_7:
                        Xchoice = 7
                
                    elif event.key == K_8:
                        Xchoice = 8
                
                    elif event.key == K_9:
                        Xchoice = 9

                    else:
                        Xchoice = -1
                   
                    

                    for i in range(0, len(UnusedBoxes)):
                        if UnusedBoxes[i] == Xchoice:
                            ValidX = True

                    

    if ValidX:
            
#===========================================================================================
            #place x on board

            PlaceX()
            #===================================================================
            
            GameOver = CheckWin("X")
            
            #==================================================================

            print(GameOver)
            if GameOver == True:
                    pygame.display.update()
                    time.sleep(5)
                    pygame.quit()
                    sys.exit()
                        
            #See if it is a draw            
            if len(UnusedBoxes) == 0:
                if not Winner:
                    DISPLAYSURF.blit(textSurfaceObjPlayerChoiceb, textRectPlayerChoice)
                    DISPLAYSURF.blit(textSurfaceObjDraw, textRectDraw)
                pygame.display.update()
                time.sleep(5)
                GameOver = True

            #==================================================================
                if GameOver == True:
                    pygame.quit()
                    sys.exit()

            
            #==============================================================================
            #Its O turn to choose something
            pygame.display.update()
            time.sleep(1)
            choice = random.choice(UnusedBoxes)
            
            #=====================================================
            #Draw O on board

            PlaceO()

            #================
                #check if O has won               
            GameOver = CheckWin("O")
                       

            if GameOver == True:
                    pygame.display.update()
                    time.sleep(5)
                    pygame.quit()
                    sys.exit()               

            
    #Write to the main screen        
    pygame.display.update()

    #============================================================
