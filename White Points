int unit = 80;
int count;
Module[] mods;

void setup() {
  size(1000, 1000);
  noStroke();// Makes it easier to see the circles
  int wideCount = width / unit;
  int highCount = height / unit;
  count = wideCount * highCount;// Multiplies the integer units
  mods = new Module[count];
  
  int index = 0;
  for (int y = 0; y < highCount; y++) {
    for (int x = 0; x < wideCount; x++) {
      mods[index++] = new Module(x*unit, y*unit, unit/2, unit/2, random(5, .001), unit);// The mods index is here
    }
  }
}

void draw() {
  background(0);
  for (int i = 0; i < count; i++) {
    mods[i].update();
    mods[i].draw();
  }
}

//Information here gets modified by the mods index
class Module {// Class that Module[] calls. Is this also the list?
  int xOffset;
  int yOffset;
  float x, y;
  int unit;
  int xDirection = 1;// Defining directions
  int yDirection = 1;
  float speed;
  
  // Constructor
  Module(int xOffsetTemp, int yOffsetTemp, int xTemp, int yTemp, float speedTemp, int tempUnit) {
    xOffset = xOffsetTemp;
    yOffset = yOffsetTemp;
    x = xTemp;
    y = yTemp;
    speed = speedTemp;
    unit = tempUnit;
  }
  
  //Custom method for updating the variables
  void update() {
    x = x + (speed * xDirection);
    if (x >= unit || x<=0) {
      xDirection = (-1 * xDirection);
      //x = x + (1 * xDirection);
      y = y + (speed * 25 * yDirection);
    }
    if (y >= height) {
      y = 0;     
      y = y + (1 * yDirection);
    }
  }
  
  // Custom method for drawing the object
  void draw() {
    fill(255);
    ellipse(xOffset + x, yOffset + y, 2, 2);
  }
}
